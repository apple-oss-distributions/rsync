#!/bin/sh

if [ $# -lt 2 ]; then
	2>&1 echo "Usage: $0 [inplist] [outplist]"
	exit 1
fi

inplist=$1
outplist=$2

impls="openrsync samba"

# Truncate
:> "$outplist"

echo "		<!-- @""generated by build-daemon-plist.sh -->" >> "$outplist"

# Walk through all of our permutations; this one is a little simpler, in that we
# only need to test the two implementations against themselves and against each
# other in both client and server roles -- there's no sender/receiver swapping
# here due.
for client in $impls; do
	uclient=$(echo "$client" | tr '[[:lower:]]' '[[:upper:]]')
	echo "#define	RSYNC_CLIENT_${uclient}	1" >> "$outplist"
	for server in $impls; do
		userver=$(echo "$server" | tr '[[:lower:]]' '[[:upper:]]')
		echo "#define	RSYNC_SERVER_${userver}	1" >> "$outplist"

		cat <<EOF >> "$outplist"
		<!-- client: ${client}, server: ${server} -->
EOF
		suffix="${client}-${server}"

		# The rsyncd tests will strictly use $RSYNC_CLIENT and
		# $RSYNC_SERVER manually; there's no shim for these ones,
		# because we don't want to do any kind of sender/receiver
		# swapping.
		cat <<EOF | sed -f - "$inplist" >> "$outplist"
/ATF_SH/i\\
			<key>RSYNC_CLIENT</key>\\
			<string>/AppleInternal/Tests/rsync/rsync.$client</string>\\
			<key>RSYNC_SERVER</key>\\
			<string>/AppleInternal/Tests/rsync/rsync.$server</string>\\
			<key>cstream</key>\\
			<string>/AppleInternal/Tests/rsync/openrsync/cstream</string>
/TestName/ {
n
s,</string>,__$suffix</string>,
}
EOF

		echo "#undef RSYNC_SERVER_${userver}" >> "$outplist"
	done
	echo "#undef RSYNC_CLIENT_${uclient}" >> "$outplist"
done
